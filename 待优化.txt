1、当前代码登录数据库直接把用户名和密码写死了
密码加密[已完成]
2、登录的注册分别对应两个URL，登录和注册的每一项要先用JS进行校验，然后数据库操作 【完成】
登录的话，登录用户名和密码与数据库对比做校验，登录成功返回用户主页
注册的话，数据库保存用户信息，成功返回用户首页
3、当前产品可选择的有【用户产品定制界面】
后台服务器配置方面：
服务器 nginx
数据库 MYSQL  mongodb  redis
框架flask
产品详细配置
标记生活        吃 喝 玩 乐
兴趣爱好        歌曲  影视  小说  漫画 体育 其他
计划人生        年计划 月计划 周计划 日计划
学习笔记
日志杂谈
4、用户主页包括用户选择的每个产品
5、前端性能提升
CSS样式和js代码都自己写
首先是样式重置：reset.css样式重置，把所有用到的标签设置样式。
因为不同的浏览器默认样式不同
正常流程是从上到下写界面上所有的HTML，然后在写样式，然后再写js
适配手机端
6、后端：将数据库的增删改查逻辑都抽出来 【完成】
视图函数中直接调用函数，不区分数据库类型
公共中增加方法实现将返回的表单数据转换为数据库可以处理的数据格式
装饰器
7、前后端分离，通过接口的形式做  后期项目做


flask获取参数方式：

request.form.get("key", type=str, default=None) 获取表单数据

request.args.get("key") 获取get请求参数

request.values.get("key") 获取所有参数
8、用户体验
正在加载做成动画参考H5和CSS3教程
9、封装
model:
方式1：数据库操作接口脚本里面的数据库模型直接判断数据库类型然后再导入
方式2：通过model脚本获取
culd
增删改查操作从脚本抽出来放到operate目录下，接口类增加对应方法即可
10、登录、注册代码重构，参考flask_login session
11、创建类别表，名字和ID对应
